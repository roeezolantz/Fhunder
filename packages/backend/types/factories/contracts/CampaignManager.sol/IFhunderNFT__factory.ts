/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFhunderNFT,
  IFhunderNFTInterface,
} from "../../../contracts/CampaignManager.sol/IFhunderNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "euint128",
        name: "encryptedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURICID",
        type: "string",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFhunderNFT__factory {
  static readonly abi = _abi;
  static createInterface(): IFhunderNFTInterface {
    return new Interface(_abi) as IFhunderNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFhunderNFT {
    return new Contract(address, _abi, runner) as unknown as IFhunderNFT;
  }
}
